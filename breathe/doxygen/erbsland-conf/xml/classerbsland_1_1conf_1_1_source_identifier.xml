<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classerbsland_1_1conf_1_1_source_identifier" kind="class" language="C++" prot="public">
    <compoundname>erbsland::conf::SourceIdentifier</compoundname>
    <includes refid="_source_identifier_8hpp" local="no">erbsland/conf/SourceIdentifier.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classerbsland_1_1conf_1_1_source_identifier_1a60710c948c0313d86388a633dd7f6553" prot="private" static="no" mutable="no">
        <type><ref refid="classerbsland_1_1conf_1_1_string" kindref="compound">String</ref></type>
        <definition>String erbsland::conf::SourceIdentifier::_name</definition>
        <argsstring></argsstring>
        <name>_name</name>
        <qualifiedname>erbsland::conf::SourceIdentifier::_name</qualifiedname>
        <briefdescription>
<para>The name of the source. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/conf/SourceIdentifier.hpp" line="146" column="12" bodyfile="erbsland/conf/SourceIdentifier.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classerbsland_1_1conf_1_1_source_identifier_1a10ee39ebcb52877f508b24d73632ee34" prot="private" static="no" mutable="no">
        <type><ref refid="classerbsland_1_1conf_1_1_string" kindref="compound">String</ref></type>
        <definition>String erbsland::conf::SourceIdentifier::_path</definition>
        <argsstring></argsstring>
        <name>_path</name>
        <qualifiedname>erbsland::conf::SourceIdentifier::_path</qualifiedname>
        <briefdescription>
<para>The path of the source. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/conf/SourceIdentifier.hpp" line="147" column="12" bodyfile="erbsland/conf/SourceIdentifier.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classerbsland_1_1conf_1_1_source_identifier_1ad4b72dd70ae54474940e1c5142eca828" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>erbsland::conf::SourceIdentifier::SourceIdentifier</definition>
        <argsstring>(String name, String path, impl::PrivateTag) noexcept</argsstring>
        <name>SourceIdentifier</name>
        <qualifiedname>erbsland::conf::SourceIdentifier::SourceIdentifier</qualifiedname>
        <param>
          <type><ref refid="classerbsland_1_1conf_1_1_string" kindref="compound">String</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classerbsland_1_1conf_1_1_string" kindref="compound">String</ref></type>
          <declname>path</declname>
        </param>
        <param>
          <type>impl::PrivateTag</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new source identifier with explicit name and path.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the source. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path of the source. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/conf/SourceIdentifier.hpp" line="38" column="5" bodyfile="erbsland/conf/SourceIdentifier.hpp" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classerbsland_1_1conf_1_1_source_identifier_1ab3c28812eb0101cff04b64dd2e292901" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>erbsland::conf::SourceIdentifier::~SourceIdentifier</definition>
        <argsstring>()=default</argsstring>
        <name>~SourceIdentifier</name>
        <qualifiedname>erbsland::conf::SourceIdentifier::~SourceIdentifier</qualifiedname>
        <briefdescription>
<para>Default destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/conf/SourceIdentifier.hpp" line="72" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classerbsland_1_1conf_1_1_source_identifier_1a93b64c1473c2e76014f3259c3950b27b" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool erbsland::conf::SourceIdentifier::operator==</definition>
        <argsstring>(const SourceIdentifier &amp;other) const noexcept</argsstring>
        <name>operator==</name>
        <qualifiedname>erbsland::conf::SourceIdentifier::operator==</qualifiedname>
        <param>
          <type>const <ref refid="classerbsland_1_1conf_1_1_source_identifier" kindref="compound">SourceIdentifier</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare this source identifier to another for equality.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The other identifier to compare. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if both identifiers have the same name and path. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/conf/SourceIdentifier.hpp" line="80" column="11" bodyfile="erbsland/conf/SourceIdentifier.hpp" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classerbsland_1_1conf_1_1_source_identifier_1a5c2128048346f86e3dd3ff661957e67f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool erbsland::conf::SourceIdentifier::operator!=</definition>
        <argsstring>(const SourceIdentifier &amp;other) const noexcept</argsstring>
        <name>operator!=</name>
        <qualifiedname>erbsland::conf::SourceIdentifier::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="classerbsland_1_1conf_1_1_source_identifier" kindref="compound">SourceIdentifier</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare this source identifier to another for inequality.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The other identifier to compare. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the identifiers differ. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/conf/SourceIdentifier.hpp" line="89" column="11" bodyfile="erbsland/conf/SourceIdentifier.hpp" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classerbsland_1_1conf_1_1_source_identifier_1a9fc94302dfb6e0b48dc4ee76b7c94ff1" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="classerbsland_1_1conf_1_1_string" kindref="compound">String</ref> &amp;</type>
        <definition>const String &amp; erbsland::conf::SourceIdentifier::name</definition>
        <argsstring>() const noexcept</argsstring>
        <name>name</name>
        <qualifiedname>erbsland::conf::SourceIdentifier::name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the name of the source. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/conf/SourceIdentifier.hpp" line="96" column="19" bodyfile="erbsland/conf/SourceIdentifier.hpp" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classerbsland_1_1conf_1_1_source_identifier_1a74d3b8d31cc23381619c510e52358816" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="classerbsland_1_1conf_1_1_string" kindref="compound">String</ref> &amp;</type>
        <definition>const String &amp; erbsland::conf::SourceIdentifier::path</definition>
        <argsstring>() const noexcept</argsstring>
        <name>path</name>
        <qualifiedname>erbsland::conf::SourceIdentifier::path</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the path of the source. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/conf/SourceIdentifier.hpp" line="100" column="19" bodyfile="erbsland/conf/SourceIdentifier.hpp" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classerbsland_1_1conf_1_1_source_identifier_1a67c6bee9c5a01d29ab63bfddd1c578b1" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classerbsland_1_1conf_1_1_string" kindref="compound">String</ref></type>
        <definition>String erbsland::conf::SourceIdentifier::toText</definition>
        <argsstring>() const noexcept</argsstring>
        <name>toText</name>
        <qualifiedname>erbsland::conf::SourceIdentifier::toText</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a text representation of this source identifier.</para>
<para><simplesect kind="return"><para>A text representation of the identifier. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/conf/SourceIdentifier.hpp" line="107" column="13" bodyfile="erbsland/conf/SourceIdentifier.hpp" bodystart="107" bodyend="116"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classerbsland_1_1conf_1_1_source_identifier_1ae7fbec61945178fa24b8dfbe72100f2f" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>SourceIdentifierPtr</type>
        <definition>static SourceIdentifierPtr erbsland::conf::SourceIdentifier::create</definition>
        <argsstring>(String name, String path) noexcept</argsstring>
        <name>create</name>
        <qualifiedname>erbsland::conf::SourceIdentifier::create</qualifiedname>
        <param>
          <type><ref refid="classerbsland_1_1conf_1_1_string" kindref="compound">String</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classerbsland_1_1conf_1_1_string" kindref="compound">String</ref></type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Factory function to create a shared source identifier.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The source name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The source path. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Shared-pointer to the new instance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/conf/SourceIdentifier.hpp" line="48" column="33" bodyfile="erbsland/conf/SourceIdentifier.hpp" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classerbsland_1_1conf_1_1_source_identifier_1a1af0d3dd9ef3795caa909479a8182fec" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>SourceIdentifierPtr</type>
        <definition>static SourceIdentifierPtr erbsland::conf::SourceIdentifier::createForFile</definition>
        <argsstring>(String path) noexcept</argsstring>
        <name>createForFile</name>
        <qualifiedname>erbsland::conf::SourceIdentifier::createForFile</qualifiedname>
        <param>
          <type><ref refid="classerbsland_1_1conf_1_1_string" kindref="compound">String</ref></type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new source identifier for a file.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The source path. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Shared-pointer to the new instance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/conf/SourceIdentifier.hpp" line="57" column="33" bodyfile="erbsland/conf/SourceIdentifier.hpp" bodystart="57" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classerbsland_1_1conf_1_1_source_identifier_1acac8e13bd8d1a5bcd5b110f99427c2d9" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>SourceIdentifierPtr</type>
        <definition>static SourceIdentifierPtr erbsland::conf::SourceIdentifier::createForText</definition>
        <argsstring>() noexcept</argsstring>
        <name>createForText</name>
        <qualifiedname>erbsland::conf::SourceIdentifier::createForText</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new source identifier for text.</para>
<para><simplesect kind="return"><para>Shared-pointer to the new instance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/conf/SourceIdentifier.hpp" line="67" column="33" bodyfile="erbsland/conf/SourceIdentifier.hpp" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classerbsland_1_1conf_1_1_source_identifier_1a72501bb6eff8d46704bd83a6bd6dcf9d" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool erbsland::conf::SourceIdentifier::areEqual</definition>
        <argsstring>(const SourceIdentifierPtr &amp;a, const SourceIdentifierPtr &amp;b) noexcept</argsstring>
        <name>areEqual</name>
        <qualifiedname>erbsland::conf::SourceIdentifier::areEqual</qualifiedname>
        <param>
          <type>const SourceIdentifierPtr &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const SourceIdentifierPtr &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A helper function to easily compare two source identifier pointers.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>The first identifier. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>The second identifier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if both identifier pointers are either nullptr, or compare to the same values. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/conf/SourceIdentifier.hpp" line="125" column="17" bodyfile="erbsland/conf/SourceIdentifier.hpp" bodystart="125" bodyend="133"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Lightweight identifier for a configuration source.</para>
<para>Instances of this class are usually shared between locations so that the parser and higher layers can refer to the same source without copying the underlying name and path strings.</para>
<para><simplesect kind="par"><title>Tested:</title><para><computeroutput>SourceIdentifierTest</computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="erbsland/conf/SourceIdentifier.hpp" line="31" column="1" bodyfile="erbsland/conf/SourceIdentifier.hpp" bodystart="31" bodyend="148"/>
    <listofallmembers>
      <member refid="classerbsland_1_1conf_1_1_source_identifier_1a60710c948c0313d86388a633dd7f6553" prot="private" virt="non-virtual"><scope>erbsland::conf::SourceIdentifier</scope><name>_name</name></member>
      <member refid="classerbsland_1_1conf_1_1_source_identifier_1a10ee39ebcb52877f508b24d73632ee34" prot="private" virt="non-virtual"><scope>erbsland::conf::SourceIdentifier</scope><name>_path</name></member>
      <member refid="classerbsland_1_1conf_1_1_source_identifier_1a72501bb6eff8d46704bd83a6bd6dcf9d" prot="public" virt="non-virtual"><scope>erbsland::conf::SourceIdentifier</scope><name>areEqual</name></member>
      <member refid="classerbsland_1_1conf_1_1_source_identifier_1ae7fbec61945178fa24b8dfbe72100f2f" prot="public" virt="non-virtual"><scope>erbsland::conf::SourceIdentifier</scope><name>create</name></member>
      <member refid="classerbsland_1_1conf_1_1_source_identifier_1a1af0d3dd9ef3795caa909479a8182fec" prot="public" virt="non-virtual"><scope>erbsland::conf::SourceIdentifier</scope><name>createForFile</name></member>
      <member refid="classerbsland_1_1conf_1_1_source_identifier_1acac8e13bd8d1a5bcd5b110f99427c2d9" prot="public" virt="non-virtual"><scope>erbsland::conf::SourceIdentifier</scope><name>createForText</name></member>
      <member refid="classerbsland_1_1conf_1_1_source_identifier_1a9fc94302dfb6e0b48dc4ee76b7c94ff1" prot="public" virt="non-virtual"><scope>erbsland::conf::SourceIdentifier</scope><name>name</name></member>
      <member refid="classerbsland_1_1conf_1_1_source_identifier_1a5c2128048346f86e3dd3ff661957e67f" prot="public" virt="non-virtual"><scope>erbsland::conf::SourceIdentifier</scope><name>operator!=</name></member>
      <member refid="classerbsland_1_1conf_1_1_source_identifier_1a93b64c1473c2e76014f3259c3950b27b" prot="public" virt="non-virtual"><scope>erbsland::conf::SourceIdentifier</scope><name>operator==</name></member>
      <member refid="classerbsland_1_1conf_1_1_source_identifier_1a74d3b8d31cc23381619c510e52358816" prot="public" virt="non-virtual"><scope>erbsland::conf::SourceIdentifier</scope><name>path</name></member>
      <member refid="classerbsland_1_1conf_1_1_source_identifier_1ad4b72dd70ae54474940e1c5142eca828" prot="public" virt="non-virtual"><scope>erbsland::conf::SourceIdentifier</scope><name>SourceIdentifier</name></member>
      <member refid="classerbsland_1_1conf_1_1_source_identifier_1a67c6bee9c5a01d29ab63bfddd1c578b1" prot="public" virt="non-virtual"><scope>erbsland::conf::SourceIdentifier</scope><name>toText</name></member>
      <member refid="classerbsland_1_1conf_1_1_source_identifier_1ab3c28812eb0101cff04b64dd2e292901" prot="public" virt="non-virtual"><scope>erbsland::conf::SourceIdentifier</scope><name>~SourceIdentifier</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
