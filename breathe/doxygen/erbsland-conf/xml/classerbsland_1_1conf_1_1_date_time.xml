<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classerbsland_1_1conf_1_1_date_time" kind="class" language="C++" prot="public" final="yes">
    <compoundname>erbsland::conf::DateTime</compoundname>
    <includes refid="_date_time_8hpp" local="no">erbsland/conf/DateTime.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classerbsland_1_1conf_1_1_date_time_1a46161e9bbffdbd23c0d2e17f8bfd7c11" prot="private" static="no" mutable="no">
        <type><ref refid="classerbsland_1_1conf_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date erbsland::conf::DateTime::_date</definition>
        <argsstring></argsstring>
        <name>_date</name>
        <qualifiedname>erbsland::conf::DateTime::_date</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/conf/DateTime.hpp" line="96" column="10" bodyfile="erbsland/conf/DateTime.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classerbsland_1_1conf_1_1_date_time_1ac330571caba84f1362fb8154ea0cb750" prot="private" static="no" mutable="no">
        <type><ref refid="classerbsland_1_1conf_1_1_time" kindref="compound">Time</ref></type>
        <definition>Time erbsland::conf::DateTime::_time</definition>
        <argsstring></argsstring>
        <name>_time</name>
        <qualifiedname>erbsland::conf::DateTime::_time</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/conf/DateTime.hpp" line="97" column="10" bodyfile="erbsland/conf/DateTime.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classerbsland_1_1conf_1_1_date_time_1ad5d7893dea306ef69cf72b7bf6a6e70a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>erbsland::conf::DateTime::DateTime</definition>
        <argsstring>()=default</argsstring>
        <name>DateTime</name>
        <qualifiedname>erbsland::conf::DateTime::DateTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an undefined date-time value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/conf/DateTime.hpp" line="27" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classerbsland_1_1conf_1_1_date_time_1a33d92e9ca85a9dc0be934526a0901780" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FwdDate</type>
          </param>
          <param>
            <type>typename FwdTime</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>erbsland::conf::DateTime::DateTime</definition>
        <argsstring>(FwdDate &amp;&amp;date, FwdTime &amp;&amp;time)</argsstring>
        <name>DateTime</name>
        <qualifiedname>erbsland::conf::DateTime::DateTime</qualifiedname>
        <param>
          <type>FwdDate &amp;&amp;</type>
          <declname>date</declname>
        </param>
        <param>
          <type>FwdTime &amp;&amp;</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new date-time value.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>FwdDate</parametername>
</parameternamelist>
<parameterdescription>
<para>A date type that can be forwarded to the internal <computeroutput><ref refid="classerbsland_1_1conf_1_1_date" kindref="compound">Date</ref></computeroutput> constructor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FwdTime</parametername>
</parameternamelist>
<parameterdescription>
<para>A time type that can be forwarded to the internal <computeroutput><ref refid="classerbsland_1_1conf_1_1_time" kindref="compound">Time</ref></computeroutput> constructor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>date</parametername>
</parameternamelist>
<parameterdescription>
<para>The date component. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>The time component. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/conf/DateTime.hpp" line="37" column="5" bodyfile="erbsland/conf/DateTime.hpp" bodystart="37" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classerbsland_1_1conf_1_1_date_time_1aa25b5873988bc4f74fea074f502bb81e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>erbsland::conf::DateTime::~DateTime</definition>
        <argsstring>()=default</argsstring>
        <name>~DateTime</name>
        <qualifiedname>erbsland::conf::DateTime::~DateTime</qualifiedname>
        <briefdescription>
<para>Default destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/conf/DateTime.hpp" line="42" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classerbsland_1_1conf_1_1_date_time_1a9666f770f6956b00df1b45a9d0d1eb17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>erbsland::conf::DateTime::DateTime</definition>
        <argsstring>(const DateTime &amp;)=default</argsstring>
        <name>DateTime</name>
        <qualifiedname>erbsland::conf::DateTime::DateTime</qualifiedname>
        <param>
          <type>const <ref refid="classerbsland_1_1conf_1_1_date_time" kindref="compound">DateTime</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Default copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/conf/DateTime.hpp" line="44" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classerbsland_1_1conf_1_1_date_time_1abf863cf7f2aba04053a621c55e375bcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classerbsland_1_1conf_1_1_date_time" kindref="compound">DateTime</ref> &amp;</type>
        <definition>DateTime &amp; erbsland::conf::DateTime::operator=</definition>
        <argsstring>(const DateTime &amp;other)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>erbsland::conf::DateTime::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classerbsland_1_1conf_1_1_date_time" kindref="compound">DateTime</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Default copy assignment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/conf/DateTime.hpp" line="46" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classerbsland_1_1conf_1_1_date_time_1ac3a4e954601b68e7d827adacf2f908bc" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool erbsland::conf::DateTime::isUndefined</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isUndefined</name>
        <qualifiedname>erbsland::conf::DateTime::isUndefined</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test if this date/time is undefined.</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if this date-time is undefined. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/conf/DateTime.hpp" line="56" column="11" bodyfile="erbsland/conf/DateTime.hpp" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classerbsland_1_1conf_1_1_date_time_1a8efc790730e96a357b098e34a96495a4" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="classerbsland_1_1conf_1_1_date" kindref="compound">Date</ref> &amp;</type>
        <definition>const Date &amp; erbsland::conf::DateTime::date</definition>
        <argsstring>() const noexcept</argsstring>
        <name>date</name>
        <qualifiedname>erbsland::conf::DateTime::date</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access the date part.</para>
<para><simplesect kind="return"><para>The date part. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/conf/DateTime.hpp" line="62" column="17" bodyfile="erbsland/conf/DateTime.hpp" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classerbsland_1_1conf_1_1_date_time_1a9151ae702ad676c79b392e54c102f2d2" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="classerbsland_1_1conf_1_1_time" kindref="compound">Time</ref> &amp;</type>
        <definition>const Time &amp; erbsland::conf::DateTime::time</definition>
        <argsstring>() const noexcept</argsstring>
        <name>time</name>
        <qualifiedname>erbsland::conf::DateTime::time</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access the time part.</para>
<para><simplesect kind="return"><para>The time part. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/conf/DateTime.hpp" line="68" column="17" bodyfile="erbsland/conf/DateTime.hpp" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classerbsland_1_1conf_1_1_date_time_1a4c63a397e03113c422a6716d4863c537" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classerbsland_1_1conf_1_1_string" kindref="compound">String</ref></type>
        <definition>String erbsland::conf::DateTime::toText</definition>
        <argsstring>() const noexcept</argsstring>
        <name>toText</name>
        <qualifiedname>erbsland::conf::DateTime::toText</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert this date-time into text.</para>
<para>Uses the ISO format yyyy-mm-dd hh:mm:ss.zzz, with these rules:</para>
<para><itemizedlist>
<listitem><para>If there is a second fraction, only the minimum required digits for the fractions are displayed.</para>
</listitem><listitem><para>For UTC times, the suffix <computeroutput>z</computeroutput> is added.</para>
</listitem><listitem><para>For times with offset, the offset with hours and minutes <computeroutput>+02:00</computeroutput> is added.</para>
</listitem><listitem><para>Local times have no suffix.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="return"><para>The formatted date-time or an empty string for undefined date-times. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/conf/DateTime.hpp" line="82" column="13"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classerbsland_1_1conf_1_1_date_time_1aff3641d3095d9b3b5420e1547fab3e5f" prot="private" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::pair&lt; int64_t, int64_t &gt;</type>
        <definition>std::pair&lt; int64_t, int64_t &gt; erbsland::conf::DateTime::valueForComparison</definition>
        <argsstring>() const noexcept</argsstring>
        <name>valueForComparison</name>
        <qualifiedname>erbsland::conf::DateTime::valueForComparison</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a pair for comparison. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/conf/DateTime.hpp" line="87" column="16" bodyfile="erbsland/conf/DateTime.hpp" bodystart="87" bodyend="93"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A date-time value, with a date, time and time-offset part.</para>
<para>@important As this date-time class is meant to be converted into a full features date-time instance, for time-comparison, local-time is assumed to be UTC. As querying the current offset for a local-time is omitted, as this would add unnecessary complexity to this data class. Date-times with different offsets are properly compared, with the offset applied to the compared point-in-time.</para>
<para><simplesect kind="par"><title>Tested:</title><para><computeroutput>DateTimeTest</computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="erbsland/conf/DateTime.hpp" line="23" column="1" bodyfile="erbsland/conf/DateTime.hpp" bodystart="23" bodyend="98"/>
    <listofallmembers>
      <member refid="classerbsland_1_1conf_1_1_date_time_1a46161e9bbffdbd23c0d2e17f8bfd7c11" prot="private" virt="non-virtual"><scope>erbsland::conf::DateTime</scope><name>_date</name></member>
      <member refid="classerbsland_1_1conf_1_1_date_time_1ac330571caba84f1362fb8154ea0cb750" prot="private" virt="non-virtual"><scope>erbsland::conf::DateTime</scope><name>_time</name></member>
      <member refid="classerbsland_1_1conf_1_1_date_time_1a8efc790730e96a357b098e34a96495a4" prot="public" virt="non-virtual"><scope>erbsland::conf::DateTime</scope><name>date</name></member>
      <member refid="classerbsland_1_1conf_1_1_date_time_1ad5d7893dea306ef69cf72b7bf6a6e70a" prot="public" virt="non-virtual"><scope>erbsland::conf::DateTime</scope><name>DateTime</name></member>
      <member refid="classerbsland_1_1conf_1_1_date_time_1a33d92e9ca85a9dc0be934526a0901780" prot="public" virt="non-virtual"><scope>erbsland::conf::DateTime</scope><name>DateTime</name></member>
      <member refid="classerbsland_1_1conf_1_1_date_time_1a9666f770f6956b00df1b45a9d0d1eb17" prot="public" virt="non-virtual"><scope>erbsland::conf::DateTime</scope><name>DateTime</name></member>
      <member refid="classerbsland_1_1conf_1_1_date_time_1ac3a4e954601b68e7d827adacf2f908bc" prot="public" virt="non-virtual"><scope>erbsland::conf::DateTime</scope><name>isUndefined</name></member>
      <member refid="classerbsland_1_1conf_1_1_date_time_1abf863cf7f2aba04053a621c55e375bcb" prot="public" virt="non-virtual"><scope>erbsland::conf::DateTime</scope><name>operator=</name></member>
      <member refid="classerbsland_1_1conf_1_1_date_time_1a9151ae702ad676c79b392e54c102f2d2" prot="public" virt="non-virtual"><scope>erbsland::conf::DateTime</scope><name>time</name></member>
      <member refid="classerbsland_1_1conf_1_1_date_time_1a4c63a397e03113c422a6716d4863c537" prot="public" virt="non-virtual"><scope>erbsland::conf::DateTime</scope><name>toText</name></member>
      <member refid="classerbsland_1_1conf_1_1_date_time_1aff3641d3095d9b3b5420e1547fab3e5f" prot="private" virt="non-virtual"><scope>erbsland::conf::DateTime</scope><name>valueForComparison</name></member>
      <member refid="classerbsland_1_1conf_1_1_date_time_1aa25b5873988bc4f74fea074f502bb81e" prot="public" virt="non-virtual"><scope>erbsland::conf::DateTime</scope><name>~DateTime</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
